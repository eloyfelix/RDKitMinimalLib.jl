var documenterSearchIndex = {"docs":
[{"location":"substructure/","page":"Substructure","title":"Substructure","text":"CurrentModule = RDKitMinimalLib","category":"page"},{"location":"substructure/","page":"Substructure","title":"Substructure","text":"get_substruct_match\nget_substruct_matches","category":"page"},{"location":"substructure/#RDKitMinimalLib.get_substruct_match","page":"Substructure","title":"RDKitMinimalLib.get_substruct_match","text":"get_substruct_match(mol::Mol, qmol::Mol, options::Union{Dict{String,Any},Nothing}=nothing)::Dict{String, Any}\n\nGets a substructure match.\n\nExamples\n\npattern = get_qmol(\"ccO\")\nmol = get_mol(\"c1ccccc1O\")\nsmatch = get_substruct_match(mol, pattern)\n\n\n\n\n\n","category":"function"},{"location":"substructure/#RDKitMinimalLib.get_substruct_matches","page":"Substructure","title":"RDKitMinimalLib.get_substruct_matches","text":"get_substruct_matches(mol::Mol, qmol::Mol, options::Union{Dict{String,Any},Nothing}=nothing)::Dict{String, Any}\n\nGets all substructure matches.\n\nExamples\n\npattern = get_qmol(\"ccO\")\nmol = get_mol(\"c1ccccc1O\")\nsmatches = get_substruct_matches(mol, pattern)\n\n\n\n\n\n","category":"function"},{"location":"modification/","page":"Modification","title":"Modification","text":"CurrentModule = RDKitMinimalLib","category":"page"},{"location":"modification/","page":"Modification","title":"Modification","text":"add_hs\nremove_all_hs","category":"page"},{"location":"modification/#RDKitMinimalLib.add_hs","page":"Modification","title":"RDKitMinimalLib.add_hs","text":"add_hs(mol::Mol, details::Union{Dict{String,Any},Nothing}=nothing)\n\nAdds Hydrogens to the molecule.\n\nExamples\n\nmol = get_mol(\"CC(=O)Oc1ccccc1C(=O)O\")\nadd_hs(mol)\n\n\n\n\n\n","category":"function"},{"location":"modification/#RDKitMinimalLib.remove_all_hs","page":"Modification","title":"RDKitMinimalLib.remove_all_hs","text":"remove_all_hs(mol::Mol, details::Union{Dict{String,Any},Nothing}=nothing)\n\nRemoves all Hydrogens from the molecule.\n\nExamples\n\nmol = get_mol(\"CC(=O)Oc1ccccc1C(=O)O\")\nremove_all_hs(mol)\n\n\n\n\n\n","category":"function"},{"location":"standardization/","page":"Standardization","title":"Standardization","text":"CurrentModule = RDKitMinimalLib","category":"page"},{"location":"standardization/","page":"Standardization","title":"Standardization","text":"cleanup\nnormalize\ncanonical_tautomer\ncharge_parent\nreionize\nneutralize\nfragment_parent","category":"page"},{"location":"standardization/#RDKitMinimalLib.cleanup","page":"Standardization","title":"RDKitMinimalLib.cleanup","text":"cleanup(mol::Mol, details::Union{Dict{String,Any},Nothing}=nothing)\n\nStandardizes a molecule.\n\nExamples\n\nmol = get_mol(\"CC(=O)Oc1ccccc1C(=O)O\")\ncleanup(mol)\n\n\n\n\n\n","category":"function"},{"location":"standardization/#RDKitMinimalLib.normalize","page":"Standardization","title":"RDKitMinimalLib.normalize","text":"normalize(mol::Mol, details::Union{Dict{String,Any},Nothing}=nothing)\n\nApplies a series of standard transformations to correct functional groups and recombine charges.\n\nExamples\n\nmol = get_mol(\"CC(=O)Oc1ccccc1C(=O)O\")\nnormalize(mol)\n\n\n\n\n\n","category":"function"},{"location":"standardization/#RDKitMinimalLib.canonical_tautomer","page":"Standardization","title":"RDKitMinimalLib.canonical_tautomer","text":"canonical_tautomer(mol::Mol, details::Union{Dict{String,Any},Nothing}=nothing)\n\nReturns the canonical tautomer for a molecule.\n\nExamples\n\nmol = get_mol(\"CC(=O)Oc1ccccc1C(=O)O\")\ncanonical_tautomer(mol)\n\n\n\n\n\n","category":"function"},{"location":"standardization/#RDKitMinimalLib.charge_parent","page":"Standardization","title":"RDKitMinimalLib.charge_parent","text":"charge_parent(mol::Mol, details::Union{Dict{String,Any},Nothing}=nothing)\n\nReturns the uncharged version of the largest fragment.\n\nExamples\n\nmol = get_mol(\"CC(=O)Oc1ccccc1C(=O)O\")\ncharge_parent(mol)\n\n\n\n\n\n","category":"function"},{"location":"standardization/#RDKitMinimalLib.reionize","page":"Standardization","title":"RDKitMinimalLib.reionize","text":"reionize(mol::Mol, details::Union{Dict{String,Any},Nothing}=nothing)\n\nEnsures the strongest acid groups are charged first.\n\nExamples\n\nmol = get_mol(\"CC(=O)Oc1ccccc1C(=O)O\")\nreionize(mol)\n\n\n\n\n\n","category":"function"},{"location":"standardization/#RDKitMinimalLib.neutralize","page":"Standardization","title":"RDKitMinimalLib.neutralize","text":"neutralize(mol::Mol, details::Union{Dict{String,Any},Nothing}=nothing)\n\nUncharges molecules by adding and/or removing hydrogens.\n\nExamples\n\nmol = get_mol(\"CC(=O)Oc1ccccc1C(=O)O\")\nneutralize(mol)\n\n\n\n\n\n","category":"function"},{"location":"standardization/#RDKitMinimalLib.fragment_parent","page":"Standardization","title":"RDKitMinimalLib.fragment_parent","text":"fragment_parent(mol::Mol, details::Union{Dict{String,Any},Nothing}=nothing)\n\nReturns the largest fragment after doing a cleanup.\n\nExamples\n\nmol = get_mol(\"CC(=O)Oc1ccccc1C(=O)O\")\nfragment_parent(mol)\n\n\n\n\n\n","category":"function"},{"location":"calculators/","page":"Calculators","title":"Calculators","text":"CurrentModule = RDKitMinimalLib","category":"page"},{"location":"calculators/","page":"Calculators","title":"Calculators","text":"get_morgan_fp\nget_morgan_fp_as_bytes\nget_rdkit_fp\nget_rdkit_fp_as_bytes\nget_pattern_fp\nget_pattern_fp_as_bytes\nget_atom_pair_fp\nget_atom_pair_fp_as_bytes\nget_topological_torsion_fp\nget_topological_torsion_fp_as_bytes\nget_descriptors","category":"page"},{"location":"calculators/#RDKitMinimalLib.get_morgan_fp","page":"Calculators","title":"RDKitMinimalLib.get_morgan_fp","text":"get_morgan_fp(mol::Mol, details::Union{Dict{String,Any},Nothing}=nothing)::String\n\nGet Morgan (ECFP like) fingerprints.\n\nExamples\n\nmol = get_mol(\"CC(=O)Oc1ccccc1C(=O)O\")\nmfp = get_morgan_fp(mol)\n\nfp_details = Dict{String, Any}(\"nBits\" => 512, \"radius\" => 2)\nmorgan_fp = get_morgan_fp(mol, fp_details)\n\n\n\n\n\n\n","category":"function"},{"location":"calculators/#RDKitMinimalLib.get_morgan_fp_as_bytes","page":"Calculators","title":"RDKitMinimalLib.get_morgan_fp_as_bytes","text":"get_morgan_fp_as_bytes(mol::Mol, details::Union{Dict{String,Any},Nothing}=nothing)::Vector{UInt8}\n\nGet Morgan (ECFP like) fingerprints as bytes.\n\nExamples\n\nmol = get_mol(\"CC(=O)Oc1ccccc1C(=O)O\")\nmorgan_fp_bytes = get_morgan_fp_as_bytes(mol)\n\n\n\n\n\n","category":"function"},{"location":"calculators/#RDKitMinimalLib.get_rdkit_fp","page":"Calculators","title":"RDKitMinimalLib.get_rdkit_fp","text":"get_rdkit_fp(mol::Mol, details::Union{Dict{String,Any},Nothing}=nothing)::String\n\nGet RDKit fingerprints.\n\nExamples\n\nmol = get_mol(\"CC(=O)Oc1ccccc1C(=O)O\")\nrfp = get_rdkit_fp(mol)\n\n\n\n\n\n","category":"function"},{"location":"calculators/#RDKitMinimalLib.get_rdkit_fp_as_bytes","page":"Calculators","title":"RDKitMinimalLib.get_rdkit_fp_as_bytes","text":"get_rdkit_fp_as_bytes(mol::Mol, details::Union{Dict{String,Any},Nothing}=nothing)::Vector{UInt8}\n\nGet RDKit fingerprints as bytes.\n\nExamples\n\nmol = get_mol(\"CC(=O)Oc1ccccc1C(=O)O\")\nrfp_bytes = get_rdkit_fp_as_bytes(mol)\n\n\n\n\n\n","category":"function"},{"location":"calculators/#RDKitMinimalLib.get_pattern_fp","page":"Calculators","title":"RDKitMinimalLib.get_pattern_fp","text":"get_pattern_fp(mol::Mol, details::Union{Dict{String,Any},Nothing}=nothing)::String\n\nGet RDKit Pattern fingerprints.\n\nExamples\n\nmol = get_mol(\"CC(=O)Oc1ccccc1C(=O)O\")\npfp = get_pattern_fp(mol)\n\n\n\n\n\n","category":"function"},{"location":"calculators/#RDKitMinimalLib.get_pattern_fp_as_bytes","page":"Calculators","title":"RDKitMinimalLib.get_pattern_fp_as_bytes","text":"get_pattern_fp_as_bytes(mol::Mol, details::Union{Dict{String,Any},Nothing}=nothing)::Vector{UInt8}\n\nGet RDKit Pattern fingerprints as bytes.\n\nExamples\n\nmol = get_mol(\"CC(=O)Oc1ccccc1C(=O)O\")\npfp_bytes = get_pattern_fp_as_bytes(mol)\n\n\n\n\n\n","category":"function"},{"location":"calculators/#RDKitMinimalLib.get_atom_pair_fp","page":"Calculators","title":"RDKitMinimalLib.get_atom_pair_fp","text":"get_atom_pair_fp(mol::Mol, details::Union{Dict{String,Any},Nothing}=nothing)::String\n\nGet atom pair fingerprints.\n\nExamples\n\nmol = get_mol(\"CC(=O)Oc1ccccc1C(=O)O\")\napfp = get_atom_pair_fp(mol)\n\n\n\n\n\n","category":"function"},{"location":"calculators/#RDKitMinimalLib.get_atom_pair_fp_as_bytes","page":"Calculators","title":"RDKitMinimalLib.get_atom_pair_fp_as_bytes","text":"get_atom_pair_fp_as_bytes(mol::Mol, details::Union{Dict{String,Any},Nothing}=nothing)::Vector{UInt8}\n\nGet atom pair fingerprints as bytes.\n\nExamples\n\nmol = get_mol(\"CC(=O)Oc1ccccc1C(=O)O\")\napfp_bytes = get_atom_pair_fp_as_bytes(mol)\n\n\n\n\n\n","category":"function"},{"location":"calculators/#RDKitMinimalLib.get_topological_torsion_fp","page":"Calculators","title":"RDKitMinimalLib.get_topological_torsion_fp","text":"get_topological_torsion_fp(mol::Mol, details::Union{Dict{String,Any},Nothing}=nothing)::String\n\nGet topological torsion fingerprints.\n\nExamples\n\nmol = get_mol(\"CC(=O)Oc1ccccc1C(=O)O\")\nttfp = get_topological_torsion_fp(mol)\n\n\n\n\n\n","category":"function"},{"location":"calculators/#RDKitMinimalLib.get_topological_torsion_fp_as_bytes","page":"Calculators","title":"RDKitMinimalLib.get_topological_torsion_fp_as_bytes","text":"get_topological_torsion_fp_as_bytes(mol::Mol, details::Union{Dict{String,Any},Nothing}=nothing)::Vector{UInt8}\n\nGet topological torsion fingerprints as bytes.\n\nExamples\n\nmol = get_mol(\"CC(=O)Oc1ccccc1C(=O)O\")\nttfp_bytes = get_topological_torsion_fp_as_bytes(mol)\n\n\n\n\n\n","category":"function"},{"location":"calculators/#RDKitMinimalLib.get_descriptors","page":"Calculators","title":"RDKitMinimalLib.get_descriptors","text":"get_descriptors(mol::Mol)::Dict{String, Any}\n\nGet physico-chemical descriptors.\n\nExamples\n\nmol = get_mol(\"CC(=O)Oc1ccccc1C(=O)O\")\ndescs = get_descriptors(mol)\n\n\n\n\n\n","category":"function"},{"location":"coordinates/","page":"Coordinates","title":"Coordinates","text":"CurrentModule = RDKitMinimalLib","category":"page"},{"location":"coordinates/","page":"Coordinates","title":"Coordinates","text":"prefer_coordgen\nset_2d_coords\nset_2d_coords_aligned\nset_3d_coords","category":"page"},{"location":"coordinates/#RDKitMinimalLib.prefer_coordgen","page":"Coordinates","title":"RDKitMinimalLib.prefer_coordgen","text":"prefer_coordgen(val::Int64)\n\nSet to use CoordgenLibs for 2D coordinates generation.\n\nExamples\n\nprefer_coordgen(1)\n\n\n\n\n\n","category":"function"},{"location":"coordinates/#RDKitMinimalLib.set_2d_coords","page":"Coordinates","title":"RDKitMinimalLib.set_2d_coords","text":"set_2d_coords(mol::Mol, details::Union{Dict{String,Any},Nothing}=nothing)::Int16\n\nGenerate 2D coordinates.\n\nExamples\n\nmol = get_mol(\"CC(=O)Oc1ccccc1C(=O)O\")\nset_2d_coords(mol)\n\n\n\n\n\n","category":"function"},{"location":"coordinates/#RDKitMinimalLib.set_2d_coords_aligned","page":"Coordinates","title":"RDKitMinimalLib.set_2d_coords_aligned","text":"set_2d_coords_aligned(mol::Mol, template_mol::Mol, details::Union{Dict{String,Any},Nothing}=nothing)::Int16\n\nGenerate 2D coordinates aligned to a template mol.\n\nExamples\n\nmol = get_mol(\"CC(=O)Oc1ccccc1C(=O)O\")\ntemplate = get_mol(\"CC(=O)Nc1ccc(O)cc1\")\nset_2d_coords(template)\nset_2d_coords_aligned(mol, template_mol)\n\n\n\n\n\n","category":"function"},{"location":"coordinates/#RDKitMinimalLib.set_3d_coords","page":"Coordinates","title":"RDKitMinimalLib.set_3d_coords","text":"set_3d_coords(mol::Mol, details::Union{Dict{String,Any},Nothing}=nothing)::Int16\n\nGenerate 3D coordinates.\n\nExamples\n\nmol = get_mol(\"CC(=O)Oc1ccccc1C(=O)O\")\nset_3d_coords(mol)\n\n\n\n\n\n","category":"function"},{"location":"drawing/","page":"Drawing","title":"Drawing","text":"CurrentModule = RDKitMinimalLib","category":"page"},{"location":"drawing/","page":"Drawing","title":"Drawing","text":"get_svg\nget_rxn_svg","category":"page"},{"location":"drawing/#RDKitMinimalLib.get_svg","page":"Drawing","title":"RDKitMinimalLib.get_svg","text":"get_svg(mol::Mol, details::Union{Dict{String,Any},Nothing}=nothing)::String\n\nGet a SVG depiction of the mol.\n\nExamples\n\nmol = get_mol(\"CC(=O)Oc1ccccc1C(=O)O\")\nsvg = get_svg(mol, Dict{String,Any}(\"height\" => 300, \"width\" => 350))\n\nmol = get_mol(\"CC(=O)Oc1ccccc1C(=O)O\")\nqmol = get_qmol(\"c1ccccc1\")\nsmatch = get_substruct_match(mol, qmol)\nsvg = get_svg(mol, merge(smatch, Dict{String, Any}(\"height\" => 350, \"width\" => 350)))\n\n\n\n\n\nget_svg(mol::Mol, smatches::Vector, details::Dict=Dict{String,Any}())::String\n\nGet a SVG depiction of the mol with multiple substructre matches.\n\nExamples\n\nmol = get_mol(\"c1ccccc1\")\nqmol = get_qmol(\"c\")\nsmatches = get_substruct_matches(mol, qmol)\nsvg = get_svg(mol, smatches)\n\n\n\n\n\n","category":"function"},{"location":"drawing/#RDKitMinimalLib.get_rxn_svg","page":"Drawing","title":"RDKitMinimalLib.get_rxn_svg","text":"get_rxn_svg(rxn::Reaction, details::Union{Dict{String,Any},Nothing}=nothing)::String\n\nGet a SVG depiction of the reaction.\n\nExamples\n\nsvg = get_rxn_svg(rxn)\nrxn = get_rxn(\"[CH3:1][OH:2]>>[CH2:1]=[OH0:2]\")\nrxn_svg = get_rxn_svg(rxn, Dict{String,Any}(\"height\" => 300, \"width\" => 500))\n\n\n\n\n\n","category":"function"},{"location":"drawing/","page":"Drawing","title":"Drawing","text":"The currently supported options (details) are:","category":"page"},{"location":"drawing/","page":"Drawing","title":"Drawing","text":"atoms: list to specify which atoms are highlighted. Like the one provided by get_substruct_match\nbonds: list to specify which bonds are highlighted Like the one provided by get_substruct_match\nwidth, height, offsetx, offsety: used to draw in a subregion of a canvas\nlegend: the legend drawn under the molecule\nThe following MolDrawOptions:\naddAtomIndices\naddBondIndices\nadditionalAtomLabelPadding\naddStereoAnnotation\nannotationFontScale\natomHighlightsAreCircles\natomLabelDeuteriumTritium\natomLabels\nbackgroundColour\nbondLineWidth\ncentreMoleculesBeforeDrawing\ncircleAtoms\nclearBackground\ncontinuousHighlight\ndummiesAreAttachments\nexplicitMethyl\nfillHighlights\nfixedBondLength\nfixedScale\nflagCloseContactsDist\nfontFile\nhighlightBondWidthMultiplier\nhighlightColour\nhighlightRadius\nincludeAtomTags\nincludeMetadata\nincludeRadicals\nlegendColour\nlegendFontSize\nmaxFontSize\nminFontSize\nmultipleBondOffset\npadding\nprepareMolsBeforeDrawing\nrotate\nscaleBondWidth\nscaleHighlightBondWidth\nsymbolColour","category":"page"},{"location":"#RDKitMinimalLib.jl","page":"Home","title":"RDKitMinimalLib.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Welcome to the RDKitMinimalLib.jl documentation!","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = RDKitMinimalLib","category":"page"},{"location":"io/","page":"I/O","title":"I/O","text":"CurrentModule = RDKitMinimalLib","category":"page"},{"location":"io/","page":"I/O","title":"I/O","text":"get_mol\nget_qmol\nget_rxn\nget_smiles\nget_smarts\nget_molblock\nget_v3kmolblock\nget_inchi\nget_inchi_for_molblock\nget_inchikey_for_inchi","category":"page"},{"location":"io/#RDKitMinimalLib.get_mol","page":"I/O","title":"RDKitMinimalLib.get_mol","text":"get_mol(mol_string::AbstractString, details::Union{Dict{String,Any},Nothing}=nothing)::Union{Mol,Nothing}\n\nGet a mol from a molblock (v2000, v3000), SMILES or SMARTS.\n\nExamples\n\nmol = get_mol(\"CC(=O)Oc1ccccc1C(=O)O\")\n\n\n\n\n\n","category":"function"},{"location":"io/#RDKitMinimalLib.get_qmol","page":"I/O","title":"RDKitMinimalLib.get_qmol","text":"get_qmol(mol_string::AbstractString, details::Union{Dict{String,Any},Nothing}=nothing)::Union{Mol,Nothing}\n\nGet a query mol (for substructure search) for a molblock (v2000, v3000), SMILES or SMARTS.\n\nExamples\n\nmol = get_qmol(\"c1ccccc1\")\n\n\n\n\n\n","category":"function"},{"location":"io/#RDKitMinimalLib.get_rxn","page":"I/O","title":"RDKitMinimalLib.get_rxn","text":"get_rxn(rxn_string::AbstractString, details::Union{Dict{String,Any},Nothing}=nothing)::Union{Reaction,Nothing}\n\nGet a Reaction object from SMARTS. It can only be currently used with get_rxn_svg function.\n\nExamples\n\nrxn = get_rxn(\"[CH3:1][OH:2]>>[CH2:1]=[OH0:2]\")\n\n\n\n\n\n","category":"function"},{"location":"io/#RDKitMinimalLib.get_smiles","page":"I/O","title":"RDKitMinimalLib.get_smiles","text":"get_smiles(mol::Mol, details::Union{Dict{String,Any},Nothing}=nothing)::String\n\nGet the SMILES for a mol object.\n\nExamples\n\nmol = get_mol(\"CC(=O)Oc1ccccc1C(=O)O\")\nsmiles = get_smiles(mol)\n\n\n\n\n\n","category":"function"},{"location":"io/#RDKitMinimalLib.get_smarts","page":"I/O","title":"RDKitMinimalLib.get_smarts","text":"get_smarts(mol::Mol, details::Union{Dict{String,Any},Nothing}=nothing)::String\n\nGet the SMARTS for a mol object.\n\nExamples\n\nmol = get_mol(\"CC(=O)Oc1ccccc1C(=O)O\")\nsmarts = get_smarts(mol)\n\n\n\n\n\n","category":"function"},{"location":"io/#RDKitMinimalLib.get_molblock","page":"I/O","title":"RDKitMinimalLib.get_molblock","text":"get_molblock(mol::Mol, details::Union{Dict{String,Any},Nothing}=nothing)::String\n\nGet the molblock (V2000) for a mol object.\n\nExamples\n\nmol = get_mol(\"CC(=O)Oc1ccccc1C(=O)O\")\nmolblock = get_molblock(mol)\n\n\n\n\n\n","category":"function"},{"location":"io/#RDKitMinimalLib.get_v3kmolblock","page":"I/O","title":"RDKitMinimalLib.get_v3kmolblock","text":"get_molblock(mol::Mol, details::Union{Dict{String,Any},Nothing}=nothing)::String\n\nGet the molblock (V3000) for a mol object.\n\nExamples\n\nmol = get_mol(\"CC(=O)Oc1ccccc1C(=O)O\")\nv3kmolblock = get_v3kmolblock(mol)\n\n\n\n\n\n","category":"function"},{"location":"io/#RDKitMinimalLib.get_inchi","page":"I/O","title":"RDKitMinimalLib.get_inchi","text":"get_inchi(mol::Mol, details::Union{Dict{String,Any},Nothing}=nothing)::String\n\nGet the InChI for a mol object.\n\nExamples\n\nmol = get_mol(\"CC(=O)Oc1ccccc1C(=O)O\")\ninchi = get_inchi(mol)\n\n\n\n\n\n","category":"function"},{"location":"io/#RDKitMinimalLib.get_inchi_for_molblock","page":"I/O","title":"RDKitMinimalLib.get_inchi_for_molblock","text":"get_inchi_for_molblock(molblock::AbstractString, details::Union{Dict{String,Any},Nothing}=nothing)::String\n\nGet the InChI for a molblock.\n\nExamples\n\ninchi = get_inchi_for_molblock(molblock)\n\n\n\n\n\n","category":"function"},{"location":"io/#RDKitMinimalLib.get_inchikey_for_inchi","page":"I/O","title":"RDKitMinimalLib.get_inchikey_for_inchi","text":"get_inchikey_for_inchi(inchi::AbstractString)\n\nGet the InChIKey for a InChI.\n\nExamples\n\ninchikey = get_inchikey_for_inchi(\"InChI=1S/C9H8O4/c1-6(10)13-8-5-3-2-4-7(8)9(11)12/h2-5H,1H3,(H,11,12)\")\n\n\n\n\n\n","category":"function"},{"location":"utils/","page":"Utils","title":"Utils","text":"CurrentModule = RDKitMinimalLib","category":"page"},{"location":"utils/","page":"Utils","title":"Utils","text":"version\nenable_logging\ndisable_logging","category":"page"},{"location":"utils/#RDKitMinimalLib.version","page":"Utils","title":"RDKitMinimalLib.version","text":"version()::String\n\nGet RDKit version.\n\nExamples\n\nversion = version()\n\n\n\n\n\n","category":"function"},{"location":"utils/#RDKitMinimalLib.enable_logging","page":"Utils","title":"RDKitMinimalLib.enable_logging","text":"enable_logging()\n\nEnable RDKit logging.\n\nExamples\n\nenable_logging()\n\n\n\n\n\n","category":"function"},{"location":"utils/#RDKitMinimalLib.disable_logging","page":"Utils","title":"RDKitMinimalLib.disable_logging","text":"disable_logging()\n\nDisable RDKit logging.\n\nExamples\n\ndisable_logging()\n\n\n\n\n\n","category":"function"}]
}
